) %>% lapply(htmltools::HTML)
View(labels)
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
qpal = colorBin("Reds", jcm@data[["Happiness Score - 2020"]], bins=bins)
qpal = colorBin("Reds", jcm@data[["Happiness Score - 2020"]], bins=bins)
View(data)
bins <- c(2, 3, 4, 5, 6, 7, 8)
qpal = colorBin("Reds", jcm@data[["Happiness Score - 2020"]], bins=bins)
labels <- sprintf(
"<strong>%s</strong>",
chi_agg$incidents_people
) %>% lapply(htmltools::HTML)
leaflet(chi_agg) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(incidents_people),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents")opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents")opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents")opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents")opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents")opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents")opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents"),opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Incidents" ,opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Country" ,opacity = 0.7, title = NULL,
position = "bottomright")
# Create a color palette with handmade bins.
library(RColorBrewer)
mybins <- c(0,10,20,50,100,500,Inf)
mypalette <- colorBin( palette="YlOrBr", domain=world_spdf@data$POP2005, na.color="transparent", bins=mybins)
# Prepare the text for tooltips:
mytext <- paste(
"Country: ", world_spdf@data$NAME,"<br/>",
"Area: ", world_spdf@data$AREA, "<br/>",
"Population: ", round(world_spdf@data$POP2005, 2),
sep="") %>%
lapply(htmltools::HTML)
# Final Map
leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(POP2005),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~POP2005, opacity=0.9, title = "Population (M)", position = "bottomleft" )
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(POP2005),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~POP2005, opacity=0.9, title = "Population (M)", position = "bottomleft" )
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(POP2005),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3
)
# Prepare the text for tooltips:
mytext <- paste(
"Country:", jcm@data[["Country"]],"<br/>",
"Happiness score:", jcm@data[["Happiness Score - 2020"]]),
sep="") %>%
lapply(htmltools::HTML)
# Prepare the text for tooltips:
mytext <- paste(
"Country:", jcm@data[["Country"]],"<br/>",
"Happiness score:", jcm@data[["Happiness Score - 2020"]]),
sep="") %>%
lapply(htmltools::HTML)
lapply(htmltools::HTML)
# Prepare the text for tooltips:
mytext <- paste(
"Country:", jcm@data[["Country"]],"<br/>",
"Happiness score:", jcm@data[["Happiness Score - 2020"]],
sep="") %>% lapply(htmltools::HTML)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~POP2005, opacity=0.9, title = "Population (M)", position = "bottomleft" )
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~`Happiness Score - 2020`, opacity=0.9, title = "Population (M)", position = "bottomleft" )
mypalette <- colorBin( palette="YlOrBr", domain=jcm@data[["Happiness Score - 2020"]], na.color="transparent", bins=mybins)
# Prepare the text for tooltips:
mytext <- paste(
"Country:", jcm@data[["Country"]],"<br/>",
"Happiness score:", jcm@data[["Happiness Score - 2020"]],
sep="") %>% lapply(htmltools::HTML)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~`Happiness Score - 2020`, opacity=0.9, title = "Population (M)", position = "bottomleft" )
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~`Happiness Score - 2020`, opacity=0.9, title = "Population (M)", position = "bottomleft" )
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~`Happiness Score - 2020`, opacity=0.9, title = "Population (M)", position = "bottomleft" )
View(mytext)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=topo.colors(10, alpha = NULL), values=~`Happiness Score - 2020`, opacity=0.9, title = "Population (M)", position = "bottomleft" )
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3, ,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE,
fillOpacity = 0.9,
weight=0.3
)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE
)
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Country" ,opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
bins <- c(2, 3, 4, 5, 6, 7, 8)
qpal = colorBin("Reds", jcm@data[["Happiness Score - 2020"]], bins=bins)
labels <- sprintf(
"<strong>%s</strong>",
jcm@data[["Country"]]
) %>% lapply(htmltools::HTML)
leaflet(jcm) %>%
addPolygons(stroke = TRUE,opacity = 1,fillOpacity = 0.5, smoothFactor = 0.5,
color="black",fillColor = ~qpal(Country),weight = 1, label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(values=~incidents_people,pal=qpal,title="Country" ,opacity = 0.7, title = NULL,
position = "bottomright")
# Create a color palette with handmade bins.
library(RColorBrewer)
mybins <- c(0,10,20,50,100,500,Inf)
mypalette <- colorBin( palette="YlOrBr", domain=jcm@data[["Happiness Score - 2020"]], na.color="transparent", bins=mybins)
# Prepare the text for tooltips:
mytext <- paste(
"Country:", jcm@data[["Country"]],"<br/>",
"Happiness score:", jcm@data[["Happiness Score - 2020"]],
sep="") %>% lapply(htmltools::HTML)
# Final Map
leaflet(jcm) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = topo.colors(10, alpha = NULL),
stroke=TRUE
)
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data= jcm) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
Model2020 <- lm(`Happiness Score - 2020` ~ `Logged GDP per capita - 2020` + `Social Support - 2020` +
`Healthy Life Expectancy - 2020`+`Freedom to make life choices - 2020` +
`Generocity - 2020`+ `Perceptions of Corruption - 2020`,
data = data)
names(Model2020$coefficients) <- c('(Intercept)','Logged GDP per capita','Social Support','Healthy Life Expectancy', 'Freedom to make life choices', 'Generocity', 'Perceptions of Corruption')
Model2021 <- lm(`Happiness Score - 2021` ~ `Logged GDP per capita - 2021` + `Social Support - 2021` +
`Healthy Life Expectancy - 2021`+`Freedom to make life choices - 2021` +
`Generocity - 2021`+ `Perceptions of Corruption - 2021`,
data = data)
names(Model2021$coefficients) <- c('(Intercept)','Logged GDP per capita','Social Support','Healthy Life Expectancy', 'Freedom to make life choices', 'Generocity', 'Perceptions of Corruption')
modelsummary(list(Model2020,
Model2021),
fmt = 2,
title = "Explaining happiness of countries from 2020 and 2021 World Hapiness Report Dataset")
Model2020 <- lm(`Happiness Score - 2020` ~ `Logged GDP per capita - 2020` + `Social Support - 2020` +
`Healthy Life Expectancy - 2020`+`Freedom to make life choices - 2020` +
`Generocity - 2020`+ `Perceptions of Corruption - 2020`,
data = data)
names(Model2020$coefficients) <- c('(Intercept)','Logged GDP per capita','Social Support','Healthy Life Expectancy', 'Freedom to make life choices', 'Generocity', 'Perceptions of Corruption')
Model2021 <- lm(`Happiness Score - 2021` ~ `Logged GDP per capita - 2021` + `Social Support - 2021` +
`Healthy Life Expectancy - 2021`+`Freedom to make life choices - 2021` +
`Generocity - 2021`+ `Perceptions of Corruption - 2021`,
data = data)
names(Model2021$coefficients) <- c('(Intercept)','Logged GDP per capita','Social Support','Healthy Life Expectancy', 'Freedom to make life choices', 'Generocity', 'Perceptions of Corruption')
modelsummary(list(Model2020,
Model2021),
fmt = 2,
title = "Explaining happiness of countries from 2020 and 2021 World Hapiness Report Dataset")
#### Workspace setup ####
library(tidyverse)
library(readxl)
library(stringr)
library(dplyr)
library(modelsummary)
#### Read in data ####
data <- read_excel("outputs/data/dataset.xlsx")
data_2021 <- read_excel("inputs/data/Appendix_2_Data_for_Figure_2.1_2021.xls")
data_2020 <- read_excel("inputs/data/WHR20_DataForFigure2.1_2020.xls")
ListofcountriesExcluded <- rbind(subset(data_2021,!(`Country name`%in%data_2020$`Country name`)) %>% select(`Country name`), subset(data_2020,!(`Country name`%in%data_2021$`Country name`)) %>% select(`Country name`))
ListofcountriesExcluded
Model2020 <- lm(`Happiness Score - 2020` ~ `Logged GDP per capita - 2020` + `Social Support - 2020` +
`Healthy Life Expectancy - 2020`+`Freedom to make life choices - 2020` +
`Generocity - 2020`+ `Perceptions of Corruption - 2020`,
data = data)
names(Model2020$coefficients) <- c('(Intercept)','Logged GDP per capita','Social Support','Healthy Life Expectancy', 'Freedom to make life choices', 'Generocity', 'Perceptions of Corruption')
Model2021 <- lm(`Happiness Score - 2021` ~ `Logged GDP per capita - 2021` + `Social Support - 2021` +
`Healthy Life Expectancy - 2021`+`Freedom to make life choices - 2021` +
`Generocity - 2021`+ `Perceptions of Corruption - 2021`,
data = data)
names(Model2021$coefficients) <- c('(Intercept)','Logged GDP per capita','Social Support','Healthy Life Expectancy', 'Freedom to make life choices', 'Generocity', 'Perceptions of Corruption')
modelsummary(list(Model2020,
Model2021),
fmt = 2,
title = "Explaining happiness of countries from 2020 and 2021 World Hapiness Report Dataset")
